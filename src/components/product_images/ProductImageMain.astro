---
const images = [
  '/src/assets/images/image-product-1.jpg',
  '/src/assets/images/image-product-2.jpg',
  '/src/assets/images/image-product-3.jpg',
  '/src/assets/images/image-product-4.jpg',
];

const { mainImageId, isOverlay, listItemClassNames } = Astro.props;
---

<style>
  .container {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .wrapper {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;

    outline: 2px solid rgba(0, 0, 0, 0);

    border-radius: 15pt;

    width: 100%;
    min-height: 445px;

    overflow: hidden;

    transition: outline 0.25s ease-out;
  }

  .wrapper[data-is-overlay='false']:hover {
    cursor: pointer;
    outline: 2px solid var(--clr-orange-500);
  }

  .wrapper[data-is-overlay='false']:hover > img {
    transform: scale(1.05);
  }

  img {
    max-width: 100%;
    transition: transform 0.25s ease-in-out;
  }

  button {
    z-index: 200;
  }

  .btn-move-main-img {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;

    width: 56px;
    height: 56px;

    border-radius: 50%;
    border: none;

    background-color: var(--clr-white);
  }

  .btn-move-main-img[data-active='false'] {
    display: none;
  }

  .btn-move-main-img:hover {
    cursor: pointer;
  }

  .btn-move-main-img:hover > svg {
    stroke: var(--clr-orange-500);
  }

  .move-img-left {
    left: 0;
    transform: translateX(-50%);
  }

  .move-img-right {
    right: 0;
    transform: translateX(50%);
  }

  svg {
    stroke: var(--clr-blue-900);

    transition: stroke 0.1s ease-out;
  }

  @media screen and (max-width: 1150px) {
    .container[data-is-overlay='true'] {
      display: none;
    }

    .wrapper {
      min-height: auto;
      border-radius: 0;
      aspect-ratio: 5/4;
    }

    .btn-move-main-img {
      width: 40px;
      height: 40px;

      padding: 0;
    }

    svg {
      transform: scale(0.8);
    }

    .btn-move-main-img[data-active='false'] {
      display: block;
    }

    .move-img-left {
      transform: translateX(20%);
    }

    .move-img-right {
      transform: translateX(-20%);
    }
  }

  button {
    z-index: 1;
  }
</style>

<div
  class='container'
  data-is-overlay={isOverlay}>
  <button
    class='btn-move-main-img move-img-left'
    id={`${listItemClassNames}-move-img-left`}
    data-active={isOverlay.toString()}>
    <svg
      width='12'
      height='18'
      xmlns='http://www.w3.org/2000/svg'
      ><path
        d='M11 1 3 9l8 8'
        stroke='inherit'
        stroke-width='3'
        fill='none'
        fill-rule='evenodd'
      ></path></svg
    >
  </button>
  <div
    class='wrapper'
    data-is-overlay={isOverlay.toString()}>
    <img
      id={mainImageId}
      src={images[0]}
      alt=''
    />
  </div>
  <button
    class='btn-move-main-img move-img-right'
    id={`${listItemClassNames}-move-img-right`}
    data-active={isOverlay.toString()}>
    <svg
      width='13'
      height='18'
      xmlns='http://www.w3.org/2000/svg'
      ><path
        d='m2 1 8 8-8 8'
        stroke='inherit'
        stroke-width='3'
        fill='none'
        fill-rule='evenodd'
      ></path></svg
    >
  </button>
</div>

<script
  type='module'
  define:vars={{ isOverlay, mainImageId, listItemClassNames }}
>
  import ImagePicker from '/src/scripts/imagePicker.js';

  const listItems = document.querySelectorAll(`.${listItemClassNames}`);
  const mainImage = document.getElementById(mainImageId);
  const rightBtn = document.getElementById(
    `${listItemClassNames}-move-img-right`
  );
  const leftBtn = document.getElementById(
    `${listItemClassNames}-move-img-left`
  );

  if (isOverlay.toString() === 'false') {
    mainImage.addEventListener('click', () => {
      const overlay = document.getElementById('overlay-wrapper');
      overlay.setAttribute('data-active', 'true');
    });
  }
  rightBtn.addEventListener('click', () => {
    ImagePicker.handleNextOnItemClick(listItems, mainImage);
  });

  leftBtn.addEventListener('click', () => {
    ImagePicker.handlePreviousOnItemClick(listItems, mainImage);
  });
</script>
