---
import ProductImageListItem from './ProductImageListItem.astro';

import imgProduct1Thumb from '../../assets/images/image-product-1-thumbnail.jpg';
import imgProduct2Thumb from '../../assets/images/image-product-2-thumbnail.jpg';
import imgProduct3Thumb from '../../assets/images/image-product-3-thumbnail.jpg';
import imgProduct4Thumb from '../../assets/images/image-product-4-thumbnail.jpg';

const imageThumbnailSources = [
  imgProduct1Thumb,
  imgProduct2Thumb,
  imgProduct3Thumb,
  imgProduct4Thumb,
];

const { mainImageId, listItemClassNames, isOverlay } = Astro.props;
---

<style>
  .product-item-list {
    display: flex;
    justify-content: center;
    gap: 2rem;

    width: 100%;
  }
</style>

<div
  class='product-item-list'
  data-main-image-id={mainImageId}>
  <ProductImageListItem
    active='true'
    imageSource={imageThumbnailSources[0]}
    className={listItemClassNames}
  />

  <ProductImageListItem
    active='false'
    imageSource={imageThumbnailSources[1]}
    className={listItemClassNames}
  />

  <ProductImageListItem
    active='false'
    imageSource={imageThumbnailSources[2]}
    className={listItemClassNames}
  />

  <ProductImageListItem
    active='false'
    imageSource={imageThumbnailSources[3]}
    className={listItemClassNames}
  />
</div>

<script is:inline define:vars={{ mainImageId, listItemClassNames, isOverlay }}>
  class ImagePicker {
    imageMainSources = [
      '/src/assets/images/image-product-1.jpg',
      '/src/assets/images/image-product-2.jpg',
      '/src/assets/images/image-product-3.jpg',
      '/src/assets/images/image-product-4.jpg',
    ];

    overlayTracker = {
      currentIndex: 0,
      lastIndex: 0,
    };

    pageTracker = {
      currentIndex: 0,
      lastIndex: 0,
    };

    getIndexOfListItem(list, target) {
      for (let i = 0; i < list.length; i++) {
        if (list[i] === target) {
          return i;
        }
      }
    }

    getTracker(isOverlay) {
      if (isOverlay === 'true') return this.overlayTracker;
      else if (isOverlay === 'false') return this.pageTracker;
    }

    updateItemOnClick(tracker, list, image, e) {
      tracker.currentIndex = this.getIndexOfListItem(
        list,
        e.target.closest('.product-image-list-item-wrapper')
      );
      list[tracker.lastIndex]
        .closest('.product-image-list-item-wrapper')
        .setAttribute('data-active', 'false');
      list[tracker.currentIndex]
        .closest('.product-image-list-item-wrapper')
        .setAttribute('data-active', 'true');
      tracker.lastIndex = tracker.currentIndex;

      image.src = this.imageMainSources[tracker.currentIndex];
    }

    handleOnItemClick(list, image, e, isOverlay) {
      let tracker = this.getTracker(isOverlay);

      this.updateItemOnClick(tracker, list, image, e);
    }
  }

  const imagePicker = new ImagePicker();

  const listItems = document.querySelectorAll(`.${listItemClassNames}`);
  const mainImage = document.getElementById(mainImageId);

  listItems.forEach((item) => {
    item.addEventListener('click', (e) =>
      imagePicker.handleOnItemClick(listItems, mainImage, e, isOverlay)
    );
  });
</script>
